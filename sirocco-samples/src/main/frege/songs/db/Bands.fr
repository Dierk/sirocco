{--
  This module has all Band related queries
-}
module songs.db.Bands where

import sirocco.internal.JDBC
import sirocco.internal.FDBC

import songs.db.Db
import songs.data.Bands as Model

--- Lists all available bands in database
findAll :: IO  [Model.Band]
findAll = mapToBands (query "SELECT * FROM bands")

--- Finds a specific band by id
findById :: Maybe String -> IO (Model.Band)
findById id = fmap head bands
  where
    -- #TODO change to PreparedStatement
    sql   = "select * from bands where id = " ++ (fromMaybe "" id)
    bands = mapToBands $ (query sql)

--- Maps a list of rows to Model.Band instances
mapToBands :: IO [CatchAll [SqlValue]] -> IO [Model.Band]
mapToBands = mapRowsTo toBand

--- Maps a single row to a Model.Band instances
toBand :: [SqlValue] -> Model.Band
toBand ((SqlLong id):(SqlString name):[]) = Model.Band { id = id, name = name}
toBand _ = error "Error while parsing Band"
